# HELK winevent-cleanup-no-dashes-only-values filter conf
# HELK build Stage: Alpha
# Author: Nate Guagenti (@neu5ron)
# License: GPL-3.0

filter {
    #TODO: need to make check more specific
    if [event_id] {
      
        mutate {
          copy => {
            "log_name" => "event_sub_type"
            "source_name" => "event_category_type"
            "task" => "event_sub_category_type"
          }
          add_field => {
            "event_type" => "winevent"
            "etl_pipeline" => "winevent-set_event_fields"
          }
        }

        # Remove specific keys/fields that have "-"/dash has the only value values
        # Command Line will be done later on in pipeline because it is all sorts of random fields especially when we custom parse some event IDs
        # #TONOTE:Prune does not work on nested fields, so we are moving this into the beginning of Windows logs pipeline
        prune {
            blacklist_values => [
                "AccessList", "^\-$",
                "AccessReason", "^\-$",
                "AccountExpires", "^\-$",
                "AccountName", "^\-$",
                "AdditionalInfo", "^\-$",
                "Address", "^\-$",
                "AllowedToDelegateTo", "^\-$",
                "AppCorrelationID", "^\-$",
                "AuthenticationPackageName", "^\-$",
                "CallerProcessName", "^\-$",
                "ClientAddress", "^\-$",
                "ClientIP", "^\-$",
                "ClientIPAddress", "^\-$",
                "CompatibleIds", "^\-$",
                "ComputerAccountChange", "^\-$",
                "ConnectedViaIPAddress", "^\-$",
                "DCIPAddress", "^\-$",
                "DestinationIp", "^\-$",
                "DisplayName", "^\-$",
                "DnsHostName", "^\-$",
                "Domain", "^\-$",
                "Dummy", "^\-$",
                "HomeDirectory", "^\-$",
                "HomePath", "^\-$",
                "Identity", "^\-$",
                "ipAddress", "^\-$",
                "IpAddress", "^\-$",
                "IPAddress", "^\-$",
                "IpPort", "^\-$",
                "IPString", "^\-$",
                "LaunchedViaIPAddress", "^\-$",
                "LmPackageName", "^\-$",
                "LocationInformation", "^\-$",
                "LogonGuid", "^\-$",
                "LogonHours", "^\-$",
                "NewUacValue", "^\-$",
                "ObjectName", "^\-$",
                "ObjectType", "^\-$",
                "OldUacValue", "^\-$",
                "PackageName", "^\-$",
                "PasswordLastSet", "^\-$",
                "PreAuthType", "^\-$",
                "PrimaryGroupId", "^\-$",
                "PrivilegeList", "^\-$",
                "ProcessName", "^\-$",
                "ProfilePath", "^\-$",
                "RestrictedAdminMode", "^\-$",
                "SamAccountName", "^\-$",
                "ScriptPath", "^\-$",
                "ServerIpAddress", "^\-$",
                "Service", "^\-$",
                "ServicePrincipalNames", "^\-$",
                "SourceIp", "^\-$",
                "SidHistory", "^\-$",
                "SidList", "^\-$",
                "SubjectDomainName", "^\-$",
                "SubjectUserName", "^\-$",
                "SubjectUserSid", "^\-$",
                "TargetDomainName", "^\-$",
                "TargetOutboundDomainName", "^\-$",
                "TargetOutboundUserName", "^\-$",
                "TargetUserName", "^\-$",
                "TargetUserSid", "^\-$",
                "TraceMessage", "^\-$",
                "TransmittedServices", "^\-$",
                "UserAccountControl", "^\-$",
                "UserID", "^\-$",
                "UserParameters", "^\-$",
                "UserPrincipalName", "^\-$",
                "UserWorkstations", "^\-$",
                "WorkstationName", "^\-$"
            ]
            add_field => {
              "etl_pipeline" => "winevent-prune-remove_dash_values"
            }
        }
    }
}