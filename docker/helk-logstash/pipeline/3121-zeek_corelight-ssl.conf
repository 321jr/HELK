# HELK Zeek and Corelight SSL log
# HELK build Stage: Alpha
# Author: Nate Guagenti (@neu5ron)
# License: GPL-3.0

filter {
  if [event_type] == "zeek" and [event_sub_type] == "ssl" {

    mutate {
      rename => {
        "cipher" => "tls_cipher"
        "client_issuer" => "certificate_issuer"
        "client_subject" => "certificate_subject"
        "curve" => "tls_curve"
        "established" => "tls_established"
        "issuer" => "dst_certificate_issuer_name"
        "ja3" => "hash_ja3"
        "ja3s" => "hash_ja3s"
        "last_alert" => "tls_last_alert"
        "next_protocol" => "tls_next_protocol"
        "notary" => "tls_notary_response"
        "ocsp_status" => "oscp_validation_status"
        "orig_certificate_sha1" => "certificate_hash_sha1"
        "resp_certificate_sha1" => "dst_certificate_sha1"
        "resumed" => "tls_resumed"
        "server_name" => "tls_server_name"
        "subject" => "dst_certificate_subject_name"
        "validation_status" => "tls_certificate_validation_status"
        "version" => "tls_version"
        "valid_ct_logs" => "ssl_valid_ct_logs"
        "valid_ct_operators" => "ssl_valid_ct_operators"
        "valid_ct_operators_list" => "ssl_valid_ct_operators_list"        
        "version_num" => "tls_version_number"
      }
      add_field => { "etl_pipeline" => "zeek-ssl-main" }
    }

    # Count number of chained certs
    #TODO: remove if empty some day?
    ruby {
      code => "
        # Dst chain
        dst_chain = event.get('zeek_id_cert_chain_fuids')
        if !dst_chain.nil? && !dst_chain.empty?
          event.set('zeek_dst_chained_certs_count', dst_chain.length)
        end

        # Src chain
        src_chain = event.get('zeek_id_client_cert_chain_fuids')
        if !src_chain.nil? && !src_chain.empty?
            event.set('zeek_src_chained_certs_count', src_chain.length)
        end
      "
      add_field => { "etl_pipeline" => "zeek-ssl-count_cert_chain" }
      tag_on_exception =>  '_rubyexception-zeek-ssl-count_cert_chain'
    }

  }
}